name : run-python-file

on :
  push:
    branches:
      - main
      - dev
  schedule:

    - cron: '0 */2 * * *' # “At   0 */2 * * * =======>>>>>>> At minute 0 past every 2nd hour..”
  workflow_dispatch:

permissions:
  id-token: write
  contents: read # default


env:
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  MYSQL_HOST: 127.0.0.1
  MYSQL_PORT: 3306
  MYSQL_DATABASE: bank


jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3307 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'bank' # Optional, default value is "test". The specified database which will be create
          # mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: ${{ secrets.MYSQL_USER }} # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.MYSQL_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Archive production artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: dist-without-markdown
      #     path: |
      #       dist
      #       !dist/**/*.md

      # - name: Archive code coverage results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: code-coverage-report
      #     path: output/test/code-coverage.html
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: saving to txt
          path: save.txt
      
      - name : run gtu notification
        env:
          SMTP_RECEIVER_EMAIL : ${{secrets.SMTP_RECEIVER_EMAIL}}
          SMTP_SENDER_EMAIL: ${{secrets.SMTP_SENDER_EMAIL}}
          SMTP_PASSWORD: ${{secrets.SMTP_PASSWORD}}
        run: python main.py
      
